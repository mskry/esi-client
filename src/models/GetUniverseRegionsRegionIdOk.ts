/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 200 ok object
 * @export
 * @interface GetUniverseRegionsRegionIdOk
 */
export interface GetUniverseRegionsRegionIdOk {
    /**
     * constellations array
     * @type {Array<number>}
     * @memberof GetUniverseRegionsRegionIdOk
     */
    constellations: Array<number>;
    /**
     * description string
     * @type {string}
     * @memberof GetUniverseRegionsRegionIdOk
     */
    description?: string;
    /**
     * name string
     * @type {string}
     * @memberof GetUniverseRegionsRegionIdOk
     */
    name: string;
    /**
     * region_id integer
     * @type {number}
     * @memberof GetUniverseRegionsRegionIdOk
     */
    regionId: number;
}

/**
 * Check if a given object implements the GetUniverseRegionsRegionIdOk interface.
 */
export function instanceOfGetUniverseRegionsRegionIdOk(value: object): value is GetUniverseRegionsRegionIdOk {
    if (!('constellations' in value) || value['constellations'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('regionId' in value) || value['regionId'] === undefined) return false;
    return true;
}

export function GetUniverseRegionsRegionIdOkFromJSON(json: any): GetUniverseRegionsRegionIdOk {
    return GetUniverseRegionsRegionIdOkFromJSONTyped(json, false);
}

export function GetUniverseRegionsRegionIdOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUniverseRegionsRegionIdOk {
    if (json == null) {
        return json;
    }
    return {
        
        'constellations': json['constellations'],
        'description': json['description'] == null ? undefined : json['description'],
        'name': json['name'],
        'regionId': json['region_id'],
    };
}

export function GetUniverseRegionsRegionIdOkToJSON(json: any): GetUniverseRegionsRegionIdOk {
    return GetUniverseRegionsRegionIdOkToJSONTyped(json, false);
}

export function GetUniverseRegionsRegionIdOkToJSONTyped(value?: GetUniverseRegionsRegionIdOk | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'constellations': value['constellations'],
        'description': value['description'],
        'name': value['name'],
        'region_id': value['regionId'],
    };
}

