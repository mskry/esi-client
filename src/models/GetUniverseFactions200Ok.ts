/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 200 ok object
 * @export
 * @interface GetUniverseFactions200Ok
 */
export interface GetUniverseFactions200Ok {
    /**
     * corporation_id integer
     * @type {number}
     * @memberof GetUniverseFactions200Ok
     */
    corporationId?: number;
    /**
     * description string
     * @type {string}
     * @memberof GetUniverseFactions200Ok
     */
    description: string;
    /**
     * faction_id integer
     * @type {number}
     * @memberof GetUniverseFactions200Ok
     */
    factionId: number;
    /**
     * is_unique boolean
     * @type {boolean}
     * @memberof GetUniverseFactions200Ok
     */
    isUnique: boolean;
    /**
     * militia_corporation_id integer
     * @type {number}
     * @memberof GetUniverseFactions200Ok
     */
    militiaCorporationId?: number;
    /**
     * name string
     * @type {string}
     * @memberof GetUniverseFactions200Ok
     */
    name: string;
    /**
     * size_factor number
     * @type {number}
     * @memberof GetUniverseFactions200Ok
     */
    sizeFactor: number;
    /**
     * solar_system_id integer
     * @type {number}
     * @memberof GetUniverseFactions200Ok
     */
    solarSystemId?: number;
    /**
     * station_count integer
     * @type {number}
     * @memberof GetUniverseFactions200Ok
     */
    stationCount: number;
    /**
     * station_system_count integer
     * @type {number}
     * @memberof GetUniverseFactions200Ok
     */
    stationSystemCount: number;
}

/**
 * Check if a given object implements the GetUniverseFactions200Ok interface.
 */
export function instanceOfGetUniverseFactions200Ok(value: object): value is GetUniverseFactions200Ok {
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('factionId' in value) || value['factionId'] === undefined) return false;
    if (!('isUnique' in value) || value['isUnique'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('sizeFactor' in value) || value['sizeFactor'] === undefined) return false;
    if (!('stationCount' in value) || value['stationCount'] === undefined) return false;
    if (!('stationSystemCount' in value) || value['stationSystemCount'] === undefined) return false;
    return true;
}

export function GetUniverseFactions200OkFromJSON(json: any): GetUniverseFactions200Ok {
    return GetUniverseFactions200OkFromJSONTyped(json, false);
}

export function GetUniverseFactions200OkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUniverseFactions200Ok {
    if (json == null) {
        return json;
    }
    return {
        
        'corporationId': json['corporation_id'] == null ? undefined : json['corporation_id'],
        'description': json['description'],
        'factionId': json['faction_id'],
        'isUnique': json['is_unique'],
        'militiaCorporationId': json['militia_corporation_id'] == null ? undefined : json['militia_corporation_id'],
        'name': json['name'],
        'sizeFactor': json['size_factor'],
        'solarSystemId': json['solar_system_id'] == null ? undefined : json['solar_system_id'],
        'stationCount': json['station_count'],
        'stationSystemCount': json['station_system_count'],
    };
}

export function GetUniverseFactions200OkToJSON(json: any): GetUniverseFactions200Ok {
    return GetUniverseFactions200OkToJSONTyped(json, false);
}

export function GetUniverseFactions200OkToJSONTyped(value?: GetUniverseFactions200Ok | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'corporation_id': value['corporationId'],
        'description': value['description'],
        'faction_id': value['factionId'],
        'is_unique': value['isUnique'],
        'militia_corporation_id': value['militiaCorporationId'],
        'name': value['name'],
        'size_factor': value['sizeFactor'],
        'solar_system_id': value['solarSystemId'],
        'station_count': value['stationCount'],
        'station_system_count': value['stationSystemCount'],
    };
}

