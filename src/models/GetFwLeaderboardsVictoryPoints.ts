/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetFwLeaderboardsActiveTotalActiveTotal1 } from './GetFwLeaderboardsActiveTotalActiveTotal1';
import {
    GetFwLeaderboardsActiveTotalActiveTotal1FromJSON,
    GetFwLeaderboardsActiveTotalActiveTotal1FromJSONTyped,
    GetFwLeaderboardsActiveTotalActiveTotal1ToJSON,
    GetFwLeaderboardsActiveTotalActiveTotal1ToJSONTyped,
} from './GetFwLeaderboardsActiveTotalActiveTotal1';
import type { GetFwLeaderboardsLastWeekLastWeek1 } from './GetFwLeaderboardsLastWeekLastWeek1';
import {
    GetFwLeaderboardsLastWeekLastWeek1FromJSON,
    GetFwLeaderboardsLastWeekLastWeek1FromJSONTyped,
    GetFwLeaderboardsLastWeekLastWeek1ToJSON,
    GetFwLeaderboardsLastWeekLastWeek1ToJSONTyped,
} from './GetFwLeaderboardsLastWeekLastWeek1';
import type { GetFwLeaderboardsYesterdayYesterday1 } from './GetFwLeaderboardsYesterdayYesterday1';
import {
    GetFwLeaderboardsYesterdayYesterday1FromJSON,
    GetFwLeaderboardsYesterdayYesterday1FromJSONTyped,
    GetFwLeaderboardsYesterdayYesterday1ToJSON,
    GetFwLeaderboardsYesterdayYesterday1ToJSONTyped,
} from './GetFwLeaderboardsYesterdayYesterday1';

/**
 * Top 4 rankings of factions by victory points from yesterday, last week and in total
 * @export
 * @interface GetFwLeaderboardsVictoryPoints
 */
export interface GetFwLeaderboardsVictoryPoints {
    /**
     * Top 4 ranking of factions active in faction warfare by total victory points. A faction is considered "active" if they have participated in faction warfare in the past 14 days
     * @type {Array<GetFwLeaderboardsActiveTotalActiveTotal1>}
     * @memberof GetFwLeaderboardsVictoryPoints
     */
    activeTotal: Array<GetFwLeaderboardsActiveTotalActiveTotal1>;
    /**
     * Top 4 ranking of factions by victory points in the past week
     * @type {Array<GetFwLeaderboardsLastWeekLastWeek1>}
     * @memberof GetFwLeaderboardsVictoryPoints
     */
    lastWeek: Array<GetFwLeaderboardsLastWeekLastWeek1>;
    /**
     * Top 4 ranking of factions by victory points in the past day
     * @type {Array<GetFwLeaderboardsYesterdayYesterday1>}
     * @memberof GetFwLeaderboardsVictoryPoints
     */
    yesterday: Array<GetFwLeaderboardsYesterdayYesterday1>;
}

/**
 * Check if a given object implements the GetFwLeaderboardsVictoryPoints interface.
 */
export function instanceOfGetFwLeaderboardsVictoryPoints(value: object): value is GetFwLeaderboardsVictoryPoints {
    if (!('activeTotal' in value) || value['activeTotal'] === undefined) return false;
    if (!('lastWeek' in value) || value['lastWeek'] === undefined) return false;
    if (!('yesterday' in value) || value['yesterday'] === undefined) return false;
    return true;
}

export function GetFwLeaderboardsVictoryPointsFromJSON(json: any): GetFwLeaderboardsVictoryPoints {
    return GetFwLeaderboardsVictoryPointsFromJSONTyped(json, false);
}

export function GetFwLeaderboardsVictoryPointsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetFwLeaderboardsVictoryPoints {
    if (json == null) {
        return json;
    }
    return {
        
        'activeTotal': ((json['active_total'] as Array<any>).map(GetFwLeaderboardsActiveTotalActiveTotal1FromJSON)),
        'lastWeek': ((json['last_week'] as Array<any>).map(GetFwLeaderboardsLastWeekLastWeek1FromJSON)),
        'yesterday': ((json['yesterday'] as Array<any>).map(GetFwLeaderboardsYesterdayYesterday1FromJSON)),
    };
}

export function GetFwLeaderboardsVictoryPointsToJSON(json: any): GetFwLeaderboardsVictoryPoints {
    return GetFwLeaderboardsVictoryPointsToJSONTyped(json, false);
}

export function GetFwLeaderboardsVictoryPointsToJSONTyped(value?: GetFwLeaderboardsVictoryPoints | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active_total': ((value['activeTotal'] as Array<any>).map(GetFwLeaderboardsActiveTotalActiveTotal1ToJSON)),
        'last_week': ((value['lastWeek'] as Array<any>).map(GetFwLeaderboardsLastWeekLastWeek1ToJSON)),
        'yesterday': ((value['yesterday'] as Array<any>).map(GetFwLeaderboardsYesterdayYesterday1ToJSON)),
    };
}

