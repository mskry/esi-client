/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BadRequest,
  ErrorLimited,
  GatewayTimeout,
  GetRouteOriginDestinationNotFound,
  InternalServerError,
  ServiceUnavailable,
} from '../models/index';
import {
    BadRequestFromJSON,
    BadRequestToJSON,
    ErrorLimitedFromJSON,
    ErrorLimitedToJSON,
    GatewayTimeoutFromJSON,
    GatewayTimeoutToJSON,
    GetRouteOriginDestinationNotFoundFromJSON,
    GetRouteOriginDestinationNotFoundToJSON,
    InternalServerErrorFromJSON,
    InternalServerErrorToJSON,
    ServiceUnavailableFromJSON,
    ServiceUnavailableToJSON,
} from '../models/index';

export interface GetRouteOriginDestinationRequest {
    destination: number;
    origin: number;
    avoid?: Set<number>;
    connections?: Set<Set<number>>;
    datasource?: GetRouteOriginDestinationDatasourceEnum;
    flag?: GetRouteOriginDestinationFlagEnum;
    ifNoneMatch?: string;
}

/**
 * 
 */
export class RoutesApi extends runtime.BaseAPI {

    /**
     * Get the systems between origin and destination  ---  This route is cached for up to 86400 seconds
     * Get route
     */
    async getRouteOriginDestinationRaw(requestParameters: GetRouteOriginDestinationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<number>>> {
        if (requestParameters['destination'] == null) {
            throw new runtime.RequiredError(
                'destination',
                'Required parameter "destination" was null or undefined when calling getRouteOriginDestination().'
            );
        }

        if (requestParameters['origin'] == null) {
            throw new runtime.RequiredError(
                'origin',
                'Required parameter "origin" was null or undefined when calling getRouteOriginDestination().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['avoid'] != null) {
            queryParameters['avoid'] = Array.from(requestParameters['avoid'])!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters['connections'] != null) {
            queryParameters['connections'] = Array.from(requestParameters['connections'])!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters['datasource'] != null) {
            queryParameters['datasource'] = requestParameters['datasource'];
        }

        if (requestParameters['flag'] != null) {
            queryParameters['flag'] = requestParameters['flag'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['ifNoneMatch'] != null) {
            headerParameters['If-None-Match'] = String(requestParameters['ifNoneMatch']);
        }

        const response = await this.request({
            path: `/v1/route/{origin}/{destination}/`.replace(`{${"destination"}}`, encodeURIComponent(String(requestParameters['destination']))).replace(`{${"origin"}}`, encodeURIComponent(String(requestParameters['origin']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Get the systems between origin and destination  ---  This route is cached for up to 86400 seconds
     * Get route
     */
    async getRouteOriginDestination(requestParameters: GetRouteOriginDestinationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<number>> {
        const response = await this.getRouteOriginDestinationRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const GetRouteOriginDestinationDatasourceEnum = {
    Tranquility: 'tranquility'
} as const;
export type GetRouteOriginDestinationDatasourceEnum = typeof GetRouteOriginDestinationDatasourceEnum[keyof typeof GetRouteOriginDestinationDatasourceEnum];
/**
 * @export
 */
export const GetRouteOriginDestinationFlagEnum = {
    Shortest: 'shortest',
    Secure: 'secure',
    Insecure: 'insecure'
} as const;
export type GetRouteOriginDestinationFlagEnum = typeof GetRouteOriginDestinationFlagEnum[keyof typeof GetRouteOriginDestinationFlagEnum];
